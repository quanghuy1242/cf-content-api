name: Deploy

on:
  push:
    branches:
      - "**"
  # pull_request:
  #   branches:
  #     - "**"

jobs:
  predeploy:
    runs-on: ubuntu-latest
    name: Code convention & Unit tests
    env:
      ENVIRONMENT: dev
      AUTH0_NAMESPACE: abc.com
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: "20.16.0"
          cache: npm
      - run: npm ci
      - run: |
          cat > .dev.vars << EOL
          AUTH0_ISSUER=https://quanghuy1242.us.auth0.com/
          AUTH0_AUDIENCE=https://api.quanghuy.dev
          PRISMA_CLIENT_FORCE_WASM=1
          AUTH0_NAMESPACE=api.quanghuy.dev/
          ENVIRONMENT=test
          AUTH0_CLIENT_ID=2YoFQibhNG7lKkaATofzxkQHYXVfHImt
          EOL
      - run: npm run lint
      - run: npm run test:unit
  deploy-staging:
    needs: ["predeploy"]
    runs-on: ubuntu-latest
    name: Deploy to staging
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: "20.16.0"
          cache: npm
      - run: npm ci
      - name: Deploy
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          command: deploy --env staging
          preCommands: npx wrangler d1 migrations apply contents-db-staging --remote -e staging
  deploy:
    if: github.ref == 'refs/heads/main'
    needs: ["predeploy", "deploy-staging"]
    runs-on: ubuntu-latest
    name: Deploy to prod
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: "20.16.0"
          cache: npm
      - run: npm ci
      - name: Deploy
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          preCommands: npx wrangler d1 migrations apply contents-db --remote
